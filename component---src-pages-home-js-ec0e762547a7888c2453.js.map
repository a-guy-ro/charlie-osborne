{"version":3,"sources":["webpack://charlie-s_website/./src/pages/home.js"],"names":["images_ref","a","b","xPos","yPos","bgImage","data","windowWidth","useWindowWidth","windowHeight","useWindowHeight","images","nodes","forEach","node","name","getImage","displayWidthRatio","width","useState","height","displayHeightRatio","setDisplayHeightRatio","sort","childImageSharp","gatsbyImageData","console","log","useEffect","map","image","ref","className","key","id","link"],"mappings":"6lCASAA,QAAgB,SAACC,EAAEC,GAAH,OAASD,EAAEE,OAASD,EAAEC,KAAOF,EAAEG,KAAQF,EAAEE,KAAOH,EAAEE,KAAOD,EAAEC,Q,oMAmD3E,EAhDiB,SAAC,GAAW,IAKvBE,EALaC,EAAS,EAATA,KAEXC,GAAcC,SACdC,GAAeC,SACfC,EAASL,EAAKK,OAAOC,MAE3BN,EAAKK,OAAOC,MAAMC,SAAQ,SAAAC,GAA2B,eAAdA,EAAKC,OAAwBV,GAASW,OAASF,OACtF,IAAMG,EAAoBZ,EAAQa,MAAMX,EACxC,GAAoDY,cAAWd,EAAQe,OAAOH,EAAmBR,GAA1FY,EAAP,KAA2BC,EAA3B,KAWA,OAVAX,EAAOY,MAAK,SAACtB,EAAEC,GAAH,OAAQA,EAAEsB,gBAAgBC,gBAAgBP,MAAQjB,EAAEuB,gBAAgBC,gBAAgBP,SAC9FQ,QAAQC,IAAIhB,IACdiB,gBAAU,WAGR,OAFAF,QAAQC,IAAI,0BACZL,EAAuBjB,EAAQe,OAAQH,EAAoBR,GACpD,eAEN,CAACA,EAAaJ,EAASY,EAAmBV,EAAYc,IAI3D,uBAUAV,EAAOkB,KAAI,SAAAC,GACT,OACA9B,OAAe,SAAA+B,GACb,OAAID,EAAMf,OAASgB,EAAIhB,KAEnB,gBAAC,IAAD,CAAciB,UAAa,eAAeC,IAAOH,EAAMI,GAAIJ,MAASA,EAAOf,KAAQgB,EAAIhB,KAAMoB,KAAQJ,EAAII,KAAMhC,KAAQ4B,EAAI5B,KAAMC,KAAQ2B,EAAI3B,KAAMiB,mBAAsBA,EAAoBJ,kBAAqBA,IAGvM","file":"component---src-pages-home-js-ec0e762547a7888c2453.js","sourcesContent":["import React,  {useState,useEffect} from \"react\"\nimport { getImage } from \"gatsby-plugin-image\"\nimport {graphql} from \"gatsby\"\nimport images_ref from \"../images/images_ref.json\"\nimport ImageWrapper from \"../components/imageWrapper.js\"\nimport useWindowWidth from \"../components/useWindowWidth.js\"\nimport useWindowHeight from \"../components/useWindowHeight.js\"\n\n\nimages_ref.sort((a,b) => a.xPos === b.xPos ? a.yPos  - b.yPos : a.xPos - b.xPos);\n\n\nconst HomePage = ({data})=> {\n\n  const windowWidth = useWindowWidth();\n  const windowHeight = useWindowHeight();\n  const images = data.images.nodes;\n  let bgImage;\n  data.images.nodes.forEach(node => { if(node.name === 'background') {bgImage= getImage(node)}});\n  const displayWidthRatio = bgImage.width/windowWidth;\n  const [displayHeightRatio, setDisplayHeightRatio] = useState ((bgImage.height/displayWidthRatio)/windowHeight)\n  images.sort((a,b)=> b.childImageSharp.gatsbyImageData.width - a.childImageSharp.gatsbyImageData.width);\n    console.log(images);\n  useEffect(() => {\n    console.log('use effect is working!');\n    setDisplayHeightRatio((bgImage.height/(displayWidthRatio))/windowHeight);\n    return () => {\n    }\n  }, [windowHeight,bgImage, displayWidthRatio, windowWidth,displayHeightRatio])\n\n\n  return (\n<div  css={`background-color:black;\nposition: absolute;\n width:100%; \n height:100%;\n top:0;\n lef:0;\n right:0;\n overflow:hidden;\n `}>\n  {\nimages.map(image=> {\n  return (\n  images_ref.map(ref=> {\n    if (image.name === ref.name) {\n          return (\n        <ImageWrapper className  = \"imageWrapper\" key = {image.id} image = {image} name = {ref.name} link = {ref.link} xPos = {ref.xPos} yPos = {ref.yPos} displayHeightRatio = {displayHeightRatio} displayWidthRatio = {displayWidthRatio}/>\n        )\n          } else {\n            return null\n          }\n  })\n  )\n})\n}\n</div>\n  )\n}\n\nexport default HomePage\n\nexport const pageQuery = graphql `\nquery homePageQuery {\n  images: allFile(filter: {dir: {eq: \"/Users/guyronen/charlie-s_website/src/images/homePage\"}}) {\n    nodes {\n      id\n      name\n      childImageSharp {\n        gatsbyImageData(\n          placeholder: BLURRED\n          layout: CONSTRAINED\n          formats: [AUTO, WEBP, AVIF]\n        )\n      }\n      \n    }\n  }\n}\n`\n"],"sourceRoot":""}
{"version":3,"sources":["webpack://charlie-s_website/./src/pages/index.js"],"names":["data","windowWidth","useWindowWidth","windowHeight","useWindowHeight","bgImage","styled","images","nodes","findIndex","node","name","buttonImage","textImage","console","log","displayWidthRatio","getImage","width","useState","height","displayHeightRatio","setDisplayHeightRatio","useEffect","key","image","link","xPos","yPos","href","className"],"mappings":"gYA8EA,UAhEkB,SAAC,GAAW,IAAVA,EAAS,EAATA,KAEZC,GAAcC,SACdC,GAAeC,SAWfC,GAToBC,oBAAH,gEAAGA,CAAH,gFASPN,EAAKO,OAAOC,MAAMR,EAAKO,OAAOC,MAAMC,WAAU,SAAAC,GAAI,MAAgB,eAAdA,EAAKC,UACnEC,EAAcZ,EAAKO,OAAOC,MAAMR,EAAKO,OAAOC,MAAMC,WAAU,SAAAC,GAAI,MAAgB,WAAdA,EAAKC,SACvEE,EAAYb,EAAKO,OAAOC,MAAMR,EAAKO,OAAOC,MAAMC,WAAU,SAAAC,GAAI,MAAgB,wBAAdA,EAAKC,SAC3EG,QAAQC,IAAIV,GACZS,QAAQC,IAAIH,GACZE,QAAQC,IAAIF,GACZ,IAAMG,GAAoBC,OAASZ,GAASa,MAAMjB,EAClD,GAAoDkB,eAAWF,OAASZ,GAASe,OAAOJ,EAAmBb,GAApGkB,EAAP,KAA2BC,EAA3B,KAUA,OARAC,gBAAU,WAGR,OAFAT,QAAQC,IAAI,0BACZO,GAAuBL,OAASZ,GAASe,OAAQJ,EAAoBb,GAC9D,eAEN,CAACA,EAAcE,EAASW,EAAmBf,EAAYoB,IAI5D,uBASG,yCACA,gBAAC,IAAD,CAAcG,IAAM,aAAaC,MAASpB,EAASM,KAAO,aAAae,KAAO,IAAIC,KAAO,IAAIC,KAAO,IAAIP,mBAAsBA,EAAoBL,kBAAqBA,IAEvK,gBAAC,IAAD,CAAcQ,IAAM,OAAOC,MAASZ,EAAWF,KAAO,OAAOe,KAAO,IAAIC,KAAO,OAAOC,KAAO,KAC7FP,mBAAsBA,EAAoBL,kBAAqBA,IAC/D,qBAAGa,KAAO,SACV,gBAAC,IAAD,CAAcC,UAAY,mBAAmBN,IAAM,SAASC,MAASb,EAAaD,KAAO,SAASe,KAAO,IAAIC,KAAO,OAAOC,KAAO,KAAKP,mBAAsBA,EAAoBL,kBAAqBA","file":"component---src-pages-index-js-ae3e8148f61d55818021.js","sourcesContent":["import React,  {useState,useEffect} from \"react\"\nimport { getImage } from \"gatsby-plugin-image\"\nimport {graphql} from \"gatsby\"\nimport ImageWrapper from \"../components/imageWrapper.js\"\nimport useWindowWidth from \"../components/useWindowWidth.js\"\nimport useWindowHeight from \"../components/useWindowHeight.js\"\nimport styled from \"styled-components\"\n\n// import { GatsbyImage } from \"gatsby-plugin-image/dist/src/components/gatsby-image.browser\"\n\n\n// images_ref.sort((a,b) => a.xPos === b.xPos ? a.yPos  - b.yPos : a.xPos - b.xPos);\n\n\nconst IndexPage = ({data})=> {\n\n  const windowWidth = useWindowWidth();\n  const windowHeight = useWindowHeight();\n\n  const imageWrapperStyle = styled.div `\n  \n  .imageWrapperLink: focus, .imageWrapperLink: hover {\n    transform: scale(1.2,1.2);\n  }\n  `\n\n  // const images = data.images.nodes;\n  // console.log(images);\n  const bgImage = data.images.nodes[data.images.nodes.findIndex(node=>node.name === 'background')];\n  const buttonImage = data.images.nodes[data.images.nodes.findIndex(node=>node.name === 'button')];\n  const textImage = data.images.nodes[data.images.nodes.findIndex(node=>node.name === 'STEAL_COIN_TO_BEGIN')];\n  console.log(bgImage);\n  console.log(buttonImage);\n  console.log(textImage);\n  const displayWidthRatio = getImage(bgImage).width/windowWidth;\n  const [displayHeightRatio, setDisplayHeightRatio] = useState ((getImage(bgImage).height/displayWidthRatio)/windowHeight)\n\n  useEffect(() => {\n    console.log('use effect is working!');\n    setDisplayHeightRatio((getImage(bgImage).height/(displayWidthRatio))/windowHeight);\n    return () => {\n    }\n  }, [windowHeight, bgImage, displayWidthRatio, windowWidth,displayHeightRatio])\n\n\n  return (\n<div  css={`background-color:black;\nposition: absolute;\n width:100%; \n height:100%;\n top:0;\n lef:0;\n right:0;\n overflow:hidden;\n `}>\n   <imageWrapperStyle>\n   <ImageWrapper key = \"background\" image = {bgImage} name = \"background\" link = \"-\" xPos = \"0\" yPos = \"0\" displayHeightRatio = {displayHeightRatio} displayWidthRatio = {displayWidthRatio}/>\n   \n   <ImageWrapper key = \"text\" image = {textImage} name = \"text\" link = \"-\" xPos = \"38.9\" yPos = \"79\" \n   displayHeightRatio = {displayHeightRatio} displayWidthRatio = {displayWidthRatio}/>\n   <a href = \"/home\">\n   <ImageWrapper className = 'imageWrapperLink' key = \"button\" image = {buttonImage} name = \"button\" link = \"-\" xPos = \"31.5\" yPos = \"17\" displayHeightRatio = {displayHeightRatio} displayWidthRatio = {displayWidthRatio}/>\n   </a>\n   </imageWrapperStyle>\n  {\n// images.map(image=> {\n//   return (\n//   <ImageWrapper key = {image.id} image = {image} name = {image.name} link = {image.name === 'button' ? './home.js' : '-'} xPos = {image.name === 'background' ? 0 : image.name === 'button' ? 31.5 : 38.9} yPos = {image.name === 'background' ? 0 : image.name === 'button' ? 17 : 79} displayHeightRatio = {displayHeightRatio} displayWidthRatio = {displayWidthRatio}/>\n//   )\n// })\n}\n{/* <GatsbyImage className = \"bgImage\" image = {getImage(bgImage.childImageSharp)} alt =\"bgImage\"/>\n<GatsbyImage className = \"textImage\" image = {getImage(textImage.childImageSharp)} alt = \"textImage\"/> */}\n{/* <GatsbyImage className = \"buttonImage\" image = {getImage(buttonImage.childImageSharp)} alt = \"buttonImage\"/> */}\n</div>\n  )\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql `\nquery indexPageQuery {\n  images: allFile(filter: {dir: {eq: \"/Users/guyronen/charlie-s_website/src/images/landingPage\"}}) {\n    nodes {\n      id\n      name\n      childImageSharp {\n        gatsbyImageData(\n          placeholder: BLURRED\n          layout: CONSTRAINED\n          formats: [AUTO, WEBP, AVIF]\n        )\n      }\n      \n    }\n  }\n}\n`\n"],"sourceRoot":""}